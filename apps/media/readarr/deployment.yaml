apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: readarr
    app.kubernetes.io/name: readarr
  name: readarr
  namespace: media
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: readarr
      app.kubernetes.io/name: readarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: readarr
        app.kubernetes.io/name: readarr
    spec:
      containers:
        - name: readarr
          env:
            - name: TZ
              value: America/Chicago

          image: readarr
          imagePullPolicy: IfNotPresent

          ports:
            - containerPort: 8787
              name: http
              protocol: TCP

          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1

          livenessProbe:
            tcpSocket:
              port: http
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10

          startupProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1

          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 256Mi

          volumeMounts:
            - mountPath: /config/config.xml
              name: config
              readOnly: true
              subPath: config.xml
            - mountPath: /media
              name: media

      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: readarr-config
            items:
              - key: config.xml
                path: config.xml
        - name: media
          persistentVolumeClaim:
            claimName: nfs-media-claim
