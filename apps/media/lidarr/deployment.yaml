apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: lidarr
    app.kubernetes.io/name: lidarr
  name: lidarr
  namespace: media
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: lidarr
      app.kubernetes.io/name: lidarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: lidarr
        app.kubernetes.io/name: lidarr
    spec:
      initContainers:
        - args:
            - " echo 'Setting configmap'  && cp /tmp/config/config.xml /etc/config/config.xml && chmod 777 /etc/config/config.xml"
          command:
            - sh
            - -c
          image: busybox:latest
          imagePullPolicy: Always
          name: setup-config
          volumeMounts:
            - mountPath: /tmp/config
              name: config
            - mountPath: /etc/config
              name: config-empty
      containers:
        - name: lidarr
          env:
            - name: TZ
              value: America/Chicago

          image: lidarr
          imagePullPolicy: IfNotPresent

          ports:
            - containerPort: 8686
              name: http
              protocol: TCP

          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1

          livenessProbe:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - curl --fail localhost:8686/v3/system/status?apiKey=`IFS=\> && while
                  read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done <
                  /config/config.xml`
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10

          startupProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 1

          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 100m
              memory: 256Mi

          volumeMounts:
            - mountPath: /config
              name: config-empty
              readOnly: false
            - mountPath: /media
              name: media

      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: lidarr-config
            items:
              - key: config.xml
                path: config.xml
        - name: config-empty
          emptyDir: {}
        - name: media
          persistentVolumeClaim:
            claimName: smb-media-claim
