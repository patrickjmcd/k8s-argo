# Name of the tunnel you want to run
tunnel: kube-tunnel-default
credentials-file: /etc/cloudflared/creds/credentials.json
# Serves the metrics server under /metrics and the readiness server under /ready
metrics: 0.0.0.0:2000
# Autoupdates applied in a k8s pod will be lost when the pod is removed or restarted, so
# autoupdate doesn't make sense in Kubernetes. However, outside of Kubernetes, we strongly
# recommend using autoupdate.
no-autoupdate: true
# The `ingress` block tells cloudflared which local service to route incoming
# requests to. For more about ingress rules, see
# https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/ingress
#
# Remember, these rules route traffic from cloudflared to a local service. To route traffic
# from the internet to cloudflared, run `cloudflared tunnel route dns <tunnel> <hostname>`.
# E.g. `cloudflared tunnel route dns example-tunnel tunnel.example.com`.
ingress:
  # The first rule proxies traffic to the httpbin sample Service defined in app.yaml

  # DEFAULT
  - hostname: tablerocklakelevel.com
    service: http://table-rock-lake-level:80
  - hostname: pgadmin.pmcd.io
    service: http://pgadmin-pgadmin4:80
  - hostname: home.pmcd.dev
    service: http://pmcd-dev:80
  - hostname: pmcd.dev
    service: http://pmcd-dev:80
  - hostname: joshhawleygop.com
    service: http://joshhawleygop:80
  - hostname: govmikeparsons.com
    service: http://govmikeparsons:80
  - hostname: invoiceninja.pmcd.dev
    service: http://invoiceninja:80
  - hostname: glance.pmcd.io
    service: http://glance:80

  - hostname: theirishaires-preview.pmcd.dev
    service: http://the-irish-aires-preview:80
  - hostname: theirishaires.pmcd.dev
    service: http://the-irish-aires:80

  # HOME AUTOMATION
  - hostname: homebridge.pmcd.io
    service: http://192.168.1.23:8581

  # MEDIA
  - hostname: bazarr.pmcd.io
    service: http://bazarr.media:6767
  - hostname: overseerr.pmcd.io
    service: http://overseerr.media:5055
  - hostname: request.pmcd.dev
    service: http://overseerr.media:5055
  - hostname: youtubedl.pmcd.io
    service: http://youtubedl-youtubedl-material.media:17442
  - hostname: tronbyt.pmcd.io
    service: http://tronbyt-server:80


  - hostname: studio-sb-staging.pmcd.dev
    service: http://cd-staging-supabase-studio:3000

  - hostname: api-sb-staging.pmcd.dev
    service: http://cd-staging-supabase-rest:3000

  # ARGO
  - hostname: argo.pmcd.dev
    service: https://argocd-server.argocd:443
    originRequest:
      noTLSVerify: true

  # This rule sends traffic to the built-in hello-world HTTP server. This can help debug connectivity
  # issues. If hello.example.com resolves and tunnel.example.com does not, then the problem is
  # in the connection from cloudflared to your local service, not from the internet to cloudflared.
  - hostname: tunnel.pmcd.io
    service: hello_world
  # This rule matches any traffic which didn't match a previous rule, and responds with HTTP 404.
  - service: http_status:404
